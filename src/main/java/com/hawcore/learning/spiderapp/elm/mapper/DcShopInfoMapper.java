package com.hawcore.learning.spiderapp.elm.mapper;


import com.hawcore.learning.spiderapp.elm.model.DcShopInfo;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface DcShopInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dc_shop_info
     *
     * @mbg.generated
     */
    @Delete({
            "delete from dc_shop_info",
            "where ID = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dc_shop_info
     *
     * @mbg.generated
     */
    @Insert({
            "insert into dc_shop_info (ID, TASK_ID, ",
            "CHANNEL, NAME, ADDRESS, ",
            "LATITUDE, LONGITUDE, ",
            "PHONE, RATING, RATING_COUNT, ",
            "CHANNEL_SHOP_ID, CREATE_TIME)",
            "values (#{id,jdbcType=BIGINT}, #{taskId,jdbcType=BIGINT}, ",
            "#{channel,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
            "#{latitude,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, ",
            "#{phone,jdbcType=VARCHAR}, #{rating,jdbcType=DOUBLE}, #{ratingCount,jdbcType=INTEGER}, ",
            "#{channelShopId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})"
    })
    @Options(keyProperty = "id", keyColumn = "id", useGeneratedKeys = true)
    int insert(DcShopInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dc_shop_info
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "ID, TASK_ID, CHANNEL, NAME, ADDRESS, LATITUDE, LONGITUDE, PHONE, RATING, RATING_COUNT, ",
            "CHANNEL_SHOP_ID, CREATE_TIME",
            "from dc_shop_info",
            "where ID = #{id,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column = "ID", property = "id", jdbcType = JdbcType.BIGINT, id = true),
            @Result(column = "TASK_ID", property = "taskId", jdbcType = JdbcType.BIGINT),
            @Result(column = "CHANNEL", property = "channel", jdbcType = JdbcType.INTEGER),
            @Result(column = "NAME", property = "name", jdbcType = JdbcType.VARCHAR),
            @Result(column = "ADDRESS", property = "address", jdbcType = JdbcType.VARCHAR),
            @Result(column = "LATITUDE", property = "latitude", jdbcType = JdbcType.VARCHAR),
            @Result(column = "LONGITUDE", property = "longitude", jdbcType = JdbcType.VARCHAR),
            @Result(column = "PHONE", property = "phone", jdbcType = JdbcType.VARCHAR),
            @Result(column = "RATING", property = "rating", jdbcType = JdbcType.DOUBLE),
            @Result(column = "RATING_COUNT", property = "ratingCount", jdbcType = JdbcType.INTEGER),
            @Result(column = "CHANNEL_SHOP_ID", property = "channelShopId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "CREATE_TIME", property = "createTime", jdbcType = JdbcType.TIMESTAMP)
    })
    DcShopInfo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dc_shop_info
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "ID, TASK_ID, CHANNEL, NAME, ADDRESS, LATITUDE, LONGITUDE, PHONE, RATING, RATING_COUNT, ",
            "CHANNEL_SHOP_ID, CREATE_TIME",
            "from dc_shop_info"
    })
    @Results({
            @Result(column = "ID", property = "id", jdbcType = JdbcType.BIGINT, id = true),
            @Result(column = "TASK_ID", property = "taskId", jdbcType = JdbcType.BIGINT),
            @Result(column = "CHANNEL", property = "channel", jdbcType = JdbcType.INTEGER),
            @Result(column = "NAME", property = "name", jdbcType = JdbcType.VARCHAR),
            @Result(column = "ADDRESS", property = "address", jdbcType = JdbcType.VARCHAR),
            @Result(column = "LATITUDE", property = "latitude", jdbcType = JdbcType.VARCHAR),
            @Result(column = "LONGITUDE", property = "longitude", jdbcType = JdbcType.VARCHAR),
            @Result(column = "PHONE", property = "phone", jdbcType = JdbcType.VARCHAR),
            @Result(column = "RATING", property = "rating", jdbcType = JdbcType.DOUBLE),
            @Result(column = "RATING_COUNT", property = "ratingCount", jdbcType = JdbcType.INTEGER),
            @Result(column = "CHANNEL_SHOP_ID", property = "channelShopId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "CREATE_TIME", property = "createTime", jdbcType = JdbcType.TIMESTAMP)
    })
    List<DcShopInfo> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dc_shop_info
     *
     * @mbg.generated
     */
    @Update({
            "update dc_shop_info",
            "set TASK_ID = #{taskId,jdbcType=BIGINT},",
            "CHANNEL = #{channel,jdbcType=INTEGER},",
            "NAME = #{name,jdbcType=VARCHAR},",
            "ADDRESS = #{address,jdbcType=VARCHAR},",
            "LATITUDE = #{latitude,jdbcType=VARCHAR},",
            "LONGITUDE = #{longitude,jdbcType=VARCHAR},",
            "PHONE = #{phone,jdbcType=VARCHAR},",
            "RATING = #{rating,jdbcType=DOUBLE},",
            "RATING_COUNT = #{ratingCount,jdbcType=INTEGER},",
            "CHANNEL_SHOP_ID = #{channelShopId,jdbcType=VARCHAR},",
            "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}",
            "where ID = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(DcShopInfo record);
}

